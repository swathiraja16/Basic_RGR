/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */

'use strict';

var _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function relayFieldHandleTransform(context) {
  return require('graphql-compiler').IRTransformer.transform(context, {
    LinkedField: visitField,
    ScalarField: visitField
  });
}

/**
 * @internal
 */
function visitField(field) {
  if (field.kind === 'LinkedField') {
    field = this.traverse(field);
  }
  var handles = field.handles;
  if (!handles || !handles.length) {
    return field;
  }
  // ensure exactly one handle
  !(handles.length === 1) ? process.env.NODE_ENV !== 'production' ? require('fbjs/lib/invariant')(false, 'RelayFieldHandleTransform: Expected fields to have at most one ' + '"handle" property, got `%s`.', handles.join(', ')) : require('fbjs/lib/invariant')(false) : void 0;
  var alias = field.alias || field.name;
  var handle = handles[0];
  var name = require('relay-runtime').getRelayHandleKey(handle.name, handle.key, field.name);
  var filters = handle.filters;
  var args = filters ? field.args.filter(function (arg) {
    return filters.indexOf(arg.name) > -1;
  }) : [];

  return (0, _extends3['default'])({}, field, {
    args: args,
    alias: alias,
    name: name,
    handles: null
  });
}

module.exports = {
  transform: relayFieldHandleTransform
};